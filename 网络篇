一、网络七层架构
	1. 物理层：主要定义物理设备标准，如网线的接口类型、光纤的接口类型等。主要作用是传输比特流（这一层的数据叫做比特）。
	2. 数据链路层：主要将物理层接收到的数据进行MAC地址的封装和解封装。常把这一层的数据叫做帧。数据通过交换机来传输。
	3. 网络层：将接收到的数据进行IP地址的封装和解封装。通过路由器传输数据包（这一层的数据名称）。
	4. 传输层：定义了一些传输数据的协议和端口号，如
			TCP（传输控制协议）：传输效率低，可靠性强、用于传输可靠性要求高、数据量大的数据；
			UDP（用户数据报协议）：用于传输可靠性要求不高、数据量小的数据。
		主要将接收到的数据进行分段传输，到达目的地址后进行重组。（这一层的数据叫做段）
	5. 会话层：通过传输层（端口号：传输端口-接收端口）建立数据传输的通路。主要在你的系统之间发起会话或接收会话请求。
	6. 表示层：主要是进行对接收的数据进行解释、加密与解密、压缩与解压缩等，即将计算机识别的东西转换成人能够识别的东西（如图片、声音）。
	7. 应用层：主要是一些终端的应用，如FTP，WEB,QQ等。
	
二、TCP/IP原理
	1. 网络接口层：接收IP数据并进行传输。从网络上接收物理帧，抽取IP数据报转交给下一层；从网络层接收到IP数据报封装成帧数据，发送给网络。
	2. 网络层：使主机可以把分组发往任何网络，并使分组独立地传向目标。
	3. 传输层：提供应用程序间的通信。这一层负责传送数据，并且确定数据已被送到并接收。
	4. 应用层：高层协议，如虚拟终端协议（TELNET）、文件传输协议（FTP）、电子邮件传输协议（SMTP）、域名服务（DNS）、网上新闻传输协议（NNTP）等。
	
三、TCP三次握手/四次挥手
	1. 三次握手(传输之前进行三次沟通)
		1. 第一次握手：建立连接时，客户端发送SYN包（SYN=1，seq=随机数x）到服务器，并进入SYN-SENT状态，等待服务器确认。
		2. 第二次握手：服务器收到syn包，必须确认客户的联机信息，向客户端发送ACK+SYN包（SYN=1，ACK=1，seq=随机数y，ack=x+1），服务器进入SYN-RCVD状态。
		3. 第三次握手：客户端收到服务器ACK+SYN包，检查ack是否为x+1，以及ACK是否为1。再向服务器发送确认包ACK（ACK=1，ack=y+1，seq=x+1）。
					服务器收到确认包后，确认信息，正确则建立连接。
	2. 四次挥手（断开连接要进行四次）
		1. 客户端向服务端发送一个连接释放报文，用来关闭客服端到服务端的数据传送（FIN=1,seq=随机数u）。客户端进入FIN-WAIT-1（终止等待1）状态。
		2. 服务端收到连接释放报文后，发出确认报文（ACK=1，ack=u+1，seq=随机数v），服务器进入CLOSE-WAIT（关闭等待）状态。
			TCP服务通知高层的应用程序，客户端向服务端方向的连接就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，
			但是服务器若发送数据，客户端依然要接收。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。
		3. 客户端收到服务端的确认情况后，此时客户端进入FIN-WAIT-2（终止等待2）状态。
			等待服务器发送连接释放报文（在这之前还需要接收服务端发送的最后的数据）。
			服务器将最后的数据发送完毕后，就向客户端发送连接释放报文（FIN=1，ACK=1，seq=随机数w，ack=u+1），
			由于在半关闭状态，服务器很可能又发送了一些数据。服务器进入LAST-ACK（最后确认）状态。
		4. 客户端收到连接释放报文后，必须发出确认报文（ACK=1，ack=w+1，seq=u+1），此时客户端进入TIME-WAIT（时间等待）状态。
			注意此时TCP连接还没有释放，必须经过2**MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。
			服务端只要收到客户端的确认报文，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。
		
		可以看出服务器结束的时间要比客户端早一些。
	
	3. 为什么断开要四次，而连接只要三次
		连接的时候，服务端收到连接报文，可以直接发送SYN+ACK报文。但是关闭时，因为TCP连接是全双工的，需要每个方向都进行关闭，
		当服务端收到连接释放报文时，可能不会立即关闭，只能先回复一个ACK报文，通知客户端收到连接释放报文了。
		只要等到服务端的数据都发送完毕，才能发送连接释放报文。所以要四次挥手。
		
	4. 为什么TIME-WAIT状态需要经过2MSL才能返回到CLOSE状态
		在客户端发出最后的ACK回复后，需要假象网络是不可靠的，因此ACK可能丢失。服务端如果没有收到ACK，将不断发送FIN。
		所以客户端不能立刻关闭连接，必须确认服务端接收到该ACK。因此客户端就进入等待状态，如果在这期间又收到FIN，那么客户端会
		再次重发ACK并重新等待2MSL时间。MSL是指一个片段在网络中最大的存活时间，2MSL就是一个发送和一个回复的时间。
		如果直到2MSL，客户端还没再次都到FIN，那么就断定ACK被成功接收，从而结束连接。
		
	5. 为什么不能用两次握手
		两次握手只能双方确认第一个序列号，即客户端的序列号，而服务端并不知道客户端是否已经收到自己的同步信号。
		如果信号丢失，则双方不能确认第二个序列号，即服务端的信号。
		